代码层面上(vSQL/src)，主要分7大相对独立的模块：
fs：表示file system，维护持久化相关的一切
    bplus_tree: 提供索引功能，它对页的访问是通过io_manager来实现
    io_manager：提供页的访问管理功能，使得返回缓存(lru_cache)还是缺页读取磁盘(disk)对外部调用透明
    rec_manager：记录管理，维护
    其他的类都是负责较为琐碎的事
schema：提供表信息，比如类型type和列信息column
tx：表示transaction，在实际编写上其实是与fs模块有一定耦合
    tx: 表示事务的状态
    tx_io：负责事务私有页面的磁盘读写
    tx_manager：事务的集合
page：提供对物理页抽象成内存形式的模块
    page：页的基类，其余实际上用到的页都要继承于该类（在设计过程中还给这个类加上了回收复用、快速拷贝的基础功能，后来又因为各种各样的原因砍了）
    bplus_page：用于B+树索引的页，该类可同时表示根结点、内部结点、叶节点
    rec_page：存放真正的行记录的页，该页并不会理解里面存放的是什么内容，只负责存储
    head_page：表信息页，记录持久化时最少要求记录的信息，比如索引的根对应的页id
    还有一些用途不算特别明显的页：
        mem_node是B+树分裂过程中用到的临时页，它只存在于内存中，因此实现上不会每个字节都斤斤计较
        log_page每次日志记录都可以append只在文件尾部追加
table：把前面几个模块汇总的接口，顺便加上各种繁琐的解析功能
sqlite：提供shell交互和sql解析的外部sqlite依赖
api：用于对接外部的sqlite和自己实现的table模块，实现sqlite回调用的接口
